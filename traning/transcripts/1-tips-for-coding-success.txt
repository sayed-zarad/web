[00:00:00]
>> We have 22 sections here, seems like a lot and that's because it kind of is. [LAUGH] But we'll get through this and yeah, we'll go ahead and get into the introduction of the course. So, really, really excited about this. Of all the courses that I've taught, this is one I've definitely put the most time into.

[00:00:22]
And this is a particularly difficult subject to teach, just because I've been doing programming for a really, really long time. And, so I have forgotten what it's like to learn how to write code. So, I have all these like layers of knowledge in my head and I it's hard for me to pull them back to say like okay, how can I speak to someone that doesn't have the same vocabulary that I do, right?

[00:00:45]
Something that I spent years and years taking for granted. So, your responsibility today both online and in-person is to keep me honest. So, if I'm using terminology that you don't understand or acronyms that you don't understand, it's not that I'm trying to be a jerk. It's not that I'm trying to inflate my own ego.

[00:01:02]
My ego is plenty big, believe me. It's because it's really difficult to pull back those layers and realize that what I'm saying is not vocabulary that you have. But that being said, I worked really, really hard to try and put this on common terms terminology. So hopefully, that works out, okay?

[00:01:22]
So, there are some tips here to succeed in this course. You don't have to be a wizard of math to write coding. In fact, the two subjects in my opinion are quite orthogonal, in the sense that they're not. You've been great at math and terrible programming and be great at programming and terrible at math.

[00:01:41]
I'm definitely the latter of those two things. I don't know if I'm great at programming, but I'm not very good at math. And so, that's why a lot of times when people are approaching coding, that's one of the first things that I hear is like I wasn't very good at math, or they kind of try and relate this back to math.

[00:01:57]
And like, there are mathematical things in programming like if you are going to do like data science and things like that, but that's not necessarily. You're not gonna be doing like calculus, right? I don't think I've ever done calculus with programming. So, that's something that you should disabuse yourself of, like right now, like especially, what we're doing today, doesn't have a lot to do with math.

[00:02:21]
And like I say here, in fact, I see many artists, lawyers, linguists that actually have great success writing code. So yeah, just know that like, you can definitely do this. This is open to everyone. In fact, I would say this is actually more similar to learning a foreign language than it is to learning than it is to learning math.

[00:02:42]
In the sense that you learn a new way of expressing yourself that you have an idea in your head and you want to express that idea basically as code. It's the same thing like, when you're learning a language, you have this amorphous idea of like what you want to say to the person and you have to use grammar to express that.

[00:02:59]
I would say that's probably a closer analogy. So, that being said, what you're going to do today is hard. [LAUGH] And so, that there's no two ways about it, but learning to how to code is not a simple thing. It's actually quite difficult and so, I guarantee you like going through and learning some of these things.

[00:03:20]
They're just gonna, like come up to us like, this is hard. I don't get this, and then you start kind of going to the spirals, like I should get this or I can see what this other person's doing, and they get it and I don't get it yet.

[00:03:31]
Don't, don't go there, like it's not a useful place to be in your brains. Don't compare yourself to other people, don't feel like you should be getting things like you either do get it or you don't get it. And both of those things are okay, right? There's no right way to do this.

[00:03:45]
There's no correct speed that you should be going at. So, just learn on your own pace, learn on your own terms. And sometimes you have to recognize like, my brain is exhausted at this moment in time and I need to stop, take a break, go for a walk, all that kind of stuff before coming back.

[00:04:03]
So, just like wrecking, like recognize your own feelings and how you're doing and kinda take stock of that as we're going. And just like, just take it easy, I think that's kind of what I'm trying to say here. This one's really important right here. Never be afraid to Google anything and everything.

[00:04:27]
I think I kinda got this feeling from school, where I felt like if I was Googling something it means I was cheating. But just Google everything, it's not cheating, in fact it's actually requirement. Part of what you're learning today is how to Google things. In fact, that's kind of what it is to be a programmer is like, we're just giving you additional vocabulary of how to Google things.

[00:04:47]
You're a professional Googler today. So please, please, like at any time, if you don't remember something, if you don't remember the order, something goes in, all that kind of stuff. Just google it right away. So, it's not cheating, it's a skill. Don't be afraid to copy and paste code.

[00:05:07]
I see a lot of people online saying don't copy and paste this, blah, blah, blah, whatever. Just copy and paste it. Make your stuff work and then work backwards to see how it works, right? That's fine too. Like I program by StackOverflow all the time. [LAUGH] Again, that's a skill as well, so definitely do that.

[00:05:29]
If you're not familiar with StackOverflow, that's a website where you can go in and ask programming questions and people will answer. It's old enough at this point, that most of the questions you're going to have. Plenty of other people have had these questions before. So, if you just like search for it on StackOverflow, it'll probably come up.

[00:05:47]
So, that's a great resource, you should definitely be checking out StackOverflow as we go through things. Be sure to ask dumb questions, if it's not today to someone else. You can always reach out to me on Twitter, my direct messages are always open. So please ask lots of questions to anyone that can answer them.

[00:06:08]
And [COUGH] for me personally, like I can be a bit of a slow learner. And so for me, it's repeatedly exposing myself to information. Like the third or fourth time that I see it or google it or find it on StackOverflow, that's when it finally like sinks into my brain.

[00:06:24]
So if you're like me, then just continue to expose yourself to that information. And maybe hopefully, someday it'll sink in or you'll just get really good at googling that one web page. So, what's really difficult about learning to code is specifically with web development, is you have to learn a lot of things all at once in order for just kind of get like a basic layer.

[00:06:52]
And it's really tough because you have to kind of ignore some things. We're just gonna throw a bunch of stuff at you, and parts of it you're just gonna have to ignore and just realize that you're gonna come back later and more deeply understand things. I get this with some students that they wanna understand every piece as it goes together and there's some parts that are just not worth learning right now.

[00:07:14]
And that's really tough for some people to say ignore that, and they're like no, I don't wanna ignore it, I wanna learn that right now. And you have to recognize that your brain only has so much capacity for shoving stuff in it all at once. And so, if you start shoving it minor details, you're kind of precluding yourself from right now learning more important things.

[00:07:35]
Again, I would compare this to learning a foreign language because in order to like actually have a full conversation with someone in a foreign language, you have to understand actually quite a bit of stuff, right? You have to understand like grammatical structures and syntax and conjugations and agreements and those kinds of things and it's kind of the same with programming.

[00:07:53]
You have to understand this whole set of things before you can kind of put pieces together. So definitely, what I'm trying not, trying to do too today is, have you ever seen that picture, it's like how to draw an owl. [LAUGH] It's like draw a circle, and then step two is draw the rest of the owl.

[00:08:09]
[LAUGH] I'm trying not to do that today. So hopefully, what I'm going to present you with it is like, here is a mostly complete and now just draw the eyes. I want to learn things like that. We're kinda have to accept, I drew most of the elf for you in the first place, and eventually you'll learn how to do that later.

[00:08:28]
That's kind of the methodology for today. Yeah, lastly, this is not a get-rich-quick scheme. And I get that quite a bit as well from people learning how to code as they want to get like a Google job making $500,000 a year today and it's like, this is actually a lot of work.

[00:08:49]
And despite, the fact that it doesn't require you going to a university for four years and getting that certificate and that kind of stuff, it's still a ton of work. It requires a lot of investment, so be prepared to work hard like this is not something that's gonna make you rich overnight, so that too.

[00:09:09]
And entry level jobs are out there, but you're gonna have to compete and work hard for him. So, it's possible, you should definitely try, I think, but it is hard. So, The last thing I wanna say is just kind of like how I structured this course. And this is coming from a lot of iterations from teaching a lot of these workshops.

[00:09:35]
This used to be more structured towards like exercises, like almost like homework, and homework that just pains me to say, cuz I hate homework. [LAUGH] I was not very good at homework when I was in college. So, I found that when I gave these exercises to people, a lot of times they would just like look at it as like I don't know where to start, I don't know where to do this.

[00:09:56]
And it actually just bore, like a lot of frustration out of people rather than actually people like sitting there and learning. So, this workshop is more oriented towards experimentation and playing so rather than having like a clear objective, I present you with a bunch of code. And then, I was like, okay, now just mess around with it and break it and unbreak it.

[00:10:15]
And try doing this and refreshing and all these kinds of different things, and then we have a couple of big projects. And that's kind of where we'll you'll actually get in and like actually write things by yourself but during the course, in fact, we'll get to that in just a second.

[00:10:31]
There's actually live code inside of this website that you can just play with directly which will be hopefully beneficial for you. This is how I think, I would have preferred to learn, so I'm hoping that this will work for you as well.

